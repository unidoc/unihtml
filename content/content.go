//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package content ;import (_d "archive/zip";_fe "bytes";_e "fmt";_gb "net/url";_fb "os";_g "strings";);func (_bc *zipDirectory )zipPath (_aa ,_ge string )error {_gea ,_dcf :=_fb .ReadDir (_aa );if _dcf !=nil {return _e .Errorf ("\u0072\u0065\u0061di\u006e\u0067\u0020\u0064\u0069\u0072\u0065\u0063\u0074o\u0072y\u003a \u0027%\u0073\u0027\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0077",_aa ,_dcf );
};_edb :=&_g .Builder {};for _ ,_eb :=range _gea {_dgf ,_gbf :=_eb .Info ();if _gbf !=nil {return _gbf ;};_be ,_eae :=_bc .zipBasePaths (_dgf ,_aa ,_ge ,_eb .IsDir (),_edb );if _eb .IsDir (){if _db :=_bc .zipPath (_be ,_eae );_db !=nil {return _db ;};continue ;
};_dbc ,_gbf :=_fb .ReadFile (_be );if _gbf !=nil {return _gbf ;};_ecd ,_gbf :=_bc ._fc .Create (_eae );if _gbf !=nil {return _gbf ;};if _ ,_gbf =_ecd .Write (_dbc );_gbf !=nil {return _gbf ;};};return nil ;};

// ContentType implements Content interface.
func (_cb *zipDirectory )ContentType ()string {return "\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u007a\u0069\u0070";};

// StringContent implements Content interface for an HTML string.
type StringContent struct{_de string };

// Method gets the query method.
func (_ac *htmlFile )Method ()string {return "\u0068\u0074\u006d\u006c"};

// NewWebURL creates new Content webURL for provided input URL path.
func NewWebURL (path string )(Content ,error ){if _ ,_bg :=_gb .Parse (path );_bg !=nil {return nil ,_bg ;};return &webURL {_dg :path },nil ;};

// ContentType implements Content interface.
func (_ee *webURL )ContentType ()string {return "\u0074\u0065\u0078\u0074\u002f\u0070\u006c\u0061\u0069\u006e";};

// NewZipDirectory creates new zip compressed file that recursively reads the directory at the 'dirPath'
// and stores in it's in-memory buffer.
func NewZipDirectory (dirPath string )(Content ,error ){_cbd :=&zipDirectory {_ed :_fe .Buffer {}};_cbd ._fc =_d .NewWriter (&_cbd ._ed );if _ea :=_cbd .zipPath (dirPath ,"");_ea !=nil {return nil ,_ea ;};if _dgc :=_cbd ._fc .Close ();_dgc !=nil {return nil ,_dgc ;
};return _cbd ,nil ;};

// Data implements Content interface.
func (_gd *htmlFile )Data ()[]byte {return _gd ._b .Bytes ()};

// Data implements Content interface.
func (_ab *zipDirectory )Data ()[]byte {return _ab ._ed .Bytes ()};type zipDirectory struct{_ed _fe .Buffer ;_fc *_d .Writer ;};

// Content is an interface used for putting the content into Client Query.
type Content interface{ContentType ()string ;Method ()string ;Data ()[]byte ;};

// ContentType implements Content interface.
func (_fd *htmlFile )ContentType ()string {return "\u0074e\u0078\u0074\u002f\u0068\u0074\u006dl"};

// ContentType implements Content interface.
func (_eeg *StringContent )ContentType ()string {return "\u0074e\u0078\u0074\u002f\u0068\u0074\u006dl";};

// Method implements Content interface.
func (_edd *StringContent )Method ()string {return "\u0068\u0074\u006d\u006c"};

// Data implements Content interface.
func (_dd *StringContent )Data ()[]byte {return []byte (_dd ._de )};type htmlFile struct{_b _fe .Buffer };

// NewHTMLFile creates new Content htmFile for provided input path.
func NewHTMLFile (path string )(Content ,error ){_a ,_bb :=_fb .Open (path );if _bb !=nil {return nil ,_bb ;};_fea :=&htmlFile {_b :_fe .Buffer {}};if _ ,_bb =_fea ._b .ReadFrom (_a );_bb !=nil {return nil ,_bb ;};return _fea ,nil ;};

// Data implements Content interface.
func (_c *webURL )Data ()[]byte {return []byte (_c ._dg )};

// Method gets the web url query method.
func (_bf *webURL )Method ()string {return "\u0077\u0065\u0062"};

// NewStringContent creates a new StringContent.
func NewStringContent (html string )(*StringContent ,error ){return &StringContent {_de :html },nil };

// Method gets the zip directory method.
func (_ec *zipDirectory )Method ()string {return "\u0064\u0069\u0072"};type webURL struct{_dg string };func (_ecc *zipDirectory )zipBasePaths (_af _fb .FileInfo ,_afe ,_ga string ,_fbg bool ,_aba *_g .Builder )(string ,string ){_aba .WriteString (_afe );
if !_g .HasSuffix (_afe ,"\u002f"){_aba .WriteRune ('/');};_aba .WriteString (_af .Name ());if _fbg {_aba .WriteRune ('/');};_aae :=_aba .String ();_aba .Reset ();_aba .WriteString (_ga );_aba .WriteString (_af .Name ());if _fbg {_aba .WriteRune ('/');
};_cc :=_aba .String ();_aba .Reset ();return _aae ,_cc ;};