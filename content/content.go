//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package content ;import (_dc "archive/zip";_b "bytes";_e "fmt";_ga "net/url";_df "os";_g "strings";);

// NewWebURL creates new Content webURL for provided input URL path.
func NewWebURL (path string )(Content ,error ){if _ ,_dcf :=_ga .Parse (path );_dcf !=nil {return nil ,_dcf ;};return &webURL {_cb :path },nil ;};

// ContentType implements Content interface.
func (_dea *zipDirectory )ContentType ()string {return "\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u007a\u0069\u0070";};

// Content is an interface used for putting the content into Client Query.
type Content interface{ContentType ()string ;Method ()string ;Data ()[]byte ;};

// Data implements Content interface.
func (_gef *StringContent )Data ()[]byte {return []byte (_gef ._ae )};

// ContentType implements Content interface.
func (_ac *StringContent )ContentType ()string {return "\u0074e\u0078\u0074\u002f\u0068\u0074\u006dl"};

// Data implements Content interface.
func (_gd *webURL )Data ()[]byte {return []byte (_gd ._cb )};

// Data implements Content interface.
func (_ca *htmlFile )Data ()[]byte {return _ca ._bc .Bytes ()};type htmlFile struct{_bc _b .Buffer };func (_bg *zipDirectory )zipPath (_gf ,_eg string )error {_bfa ,_bfdb :=_df .ReadDir (_gf );if _bfdb !=nil {return _e .Errorf ("\u0072\u0065\u0061di\u006e\u0067\u0020\u0064\u0069\u0072\u0065\u0063\u0074o\u0072y\u003a \u0027%\u0073\u0027\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0077",_gf ,_bfdb );
};_gfg :=&_g .Builder {};for _ ,_bcb :=range _bfa {_db ,_aa :=_bcb .Info ();if _aa !=nil {return _aa ;};_aaf ,_fge :=_bg .zipBasePaths (_db ,_gf ,_eg ,_bcb .IsDir (),_gfg );if _bcb .IsDir (){if _ge :=_bg .zipPath (_aaf ,_fge );_ge !=nil {return _ge ;};
continue ;};_fb ,_aa :=_df .ReadFile (_aaf );if _aa !=nil {return _aa ;};_ebe ,_aa :=_bg ._a .Create (_fge );if _aa !=nil {return _aa ;};if _ ,_aa =_ebe .Write (_fb );_aa !=nil {return _aa ;};};return nil ;};

// Data implements Content interface.
func (_ebf *zipDirectory )Data ()[]byte {return _ebf ._gae .Bytes ()};

// Method gets the web url query method.
func (_eb *webURL )Method ()string {return "\u0077\u0065\u0062"};

// StringContent implements Content interface for an HTML string.
type StringContent struct{_ae string };

// NewZipDirectory creates new zip compressed file that recursively reads the directory at the 'dirPath'
// and stores in it's in-memory buffer.
func NewZipDirectory (dirPath string )(Content ,error ){_bcc :=&zipDirectory {_gae :_b .Buffer {}};_bcc ._a =_dc .NewWriter (&_bcc ._gae );if _gac :=_bcc .zipPath (dirPath ,"");_gac !=nil {return nil ,_gac ;};if _ad :=_bcc ._a .Close ();_ad !=nil {return nil ,_ad ;
};return _bcc ,nil ;};

// NewHTMLFile creates new Content htmFile for provided input path.
func NewHTMLFile (path string )(Content ,error ){_de ,_ea :=_df .Open (path );if _ea !=nil {return nil ,_ea ;};_bf :=&htmlFile {_bc :_b .Buffer {}};if _ ,_ea =_bf ._bc .ReadFrom (_de );_ea !=nil {return nil ,_ea ;};return _bf ,nil ;};

// Method gets the query method.
func (_f *htmlFile )Method ()string {return "\u0068\u0074\u006d\u006c"};type zipDirectory struct{_gae _b .Buffer ;_a *_dc .Writer ;};

// ContentType implements Content interface.
func (_bfd *htmlFile )ContentType ()string {return "\u0074e\u0078\u0074\u002f\u0068\u0074\u006dl"};func (_fa *zipDirectory )zipBasePaths (_eaf _df .FileInfo ,_dfa ,_cc string ,_ce bool ,_be *_g .Builder )(string ,string ){_be .WriteString (_dfa );if !_g .HasSuffix (_dfa ,"\u002f"){_be .WriteRune ('/');
};_be .WriteString (_eaf .Name ());if _ce {_be .WriteRune ('/');};_faa :=_be .String ();_be .Reset ();_be .WriteString (_cc );_be .WriteString (_eaf .Name ());if _ce {_be .WriteRune ('/');};_ag :=_be .String ();_be .Reset ();return _faa ,_ag ;};type webURL struct{_cb string };


// ContentType implements Content interface.
func (_dfb *webURL )ContentType ()string {return "\u0074\u0065\u0078\u0074\u002f\u0070\u006c\u0061\u0069\u006e";};

// NewStringContent creates a new StringContent.
func NewStringContent (html string )(*StringContent ,error ){return &StringContent {_ae :html },nil };

// Method implements Content interface.
func (_bd *StringContent )Method ()string {return "\u0068\u0074\u006d\u006c"};

// Method gets the zip directory method.
func (_bb *zipDirectory )Method ()string {return "\u0064\u0069\u0072"};